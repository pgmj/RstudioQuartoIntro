---
title: "Reproducible data analysis with R and Quarto"
title-block-banner: "#870052"
title-block-banner-color: "#FFFFFF"
title-slide-attributes:
  data-background-iframe: "multiple-images/index.html"

author: 
  name: Magnus Johansson, PhD
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://ri.se/shic
  orcid: 0000-0003-1669-592X
date: 2023-06-12
date-format: YYYY-MM-DD

format: 
  html:
    toc: true
    toc-depth: 3
    toc-title: "Table of contents"
    embed-resources: true
    standalone: true
    page-layout: full
    mainfont: 'Arial'
    code-overflow: wrap
    code-tools: true
    code-fold: show
    code-link: true
    number-sections: true
    fig-dpi: 96
    layout-align: left
    linestretch: 1.6
    theme: materia
    
  revealjs:
    theme: [night, custom.scss]
    chalkboard: false
    self-contained: true
    slide-level: 4
    scrollable: true
    smaller: false
    center: false
    preload-iframes: true
    
  pdf:
    papersize: a4
    documentclass: article #article, report or book
    classoption: [twocolumn, portrait]
    
  docx:
    toc: true
    number-sections: true
    highlight-style: github
    
execute:
  echo: true
  warning: false
  message: false
  cache: false
css: style.css
editor_options: 
  chunk_output_type: console
---

## Ambitions with this course

-   It is not a statistics course
-   We'll cover the basics of using R, Rstudio and Quarto
-   More advanced things will be addressed at later sessions
    -   requests are welcome
-   I like pragmatic learning, so we'll use practical examples for most things

### Expectations and hopes

I hope that you will be fairly comfortable with:

-   importing a dataset & doing basic analysis
-   documenting your analysis alongside your code
    -   creating an output document
-   getting something out of the many online articles using R for analysis
-   searching the internet for help

### Words of wisdom

![https://datavizs23.classes.andrewheiss.com/slides/15-slides.html#62](images/teachingYourself.png)

## Overview for today {background-color="#99D9DD"}

-   the basics of using Rstudio
-   the basics of setting up and using Quarto (in Rstudio)
-   a tiny bit of really basic R functions
-   importing data (and naming variables)
-   data wrangling
-   descriptive analysis & visualization
-   modeling & visualization

## Keyboard shortcuts

You will benefit greatly from doing things cleverly and establishing good habits from the start

-   **avoid unnecessary typing and using the mouse/trackpad**

I have prepared a handout containing the most frequently used shortcuts

-   We'll walk through them later on, and you have the handout as a reference

## Fundamentals

-   **never touch your datafile manually!!!**
    -   everything you do with your data needs to be documented
-   Don't erase code/things you try (only erase faulty code)
    -   you need to be able to retrace your steps
    -   makes it easier to involve others
    -   **You can copy&paste selected part of your code later if you need to clean up for publication/sharing**

### Good things

::: incremental
-   Traceability
    -   Transparency in decision making during analysis
-   Reproducibility
-   We use freely available tools
-   Documentation in the same file as analysis code
:::

### Levels of reproducibility {.smaller}

![Meme credit: https://bookdown.org/pdr_higgins/rmrwr/introduction-to-reproducibility.html#cleaning-and-analyzing-your-data](images/levelsOfReproducibility.JPG){fig-align="center"}

## Rstudio layout 

::: incremental
-   4 quadrants with tabs in each
    -   code, console, environment & output/help
-   projects!
-   outline & line numbers
-   moving a code tab to a separate window
-   code editor is helpful and sometimes confusing
:::

## Quarto basics

- YAML
- code chunks & chunk output
- source view and "visual"
- headings and structure
- labelling with tbl- and fig-
- (panel-tabset)

## Basics about R

-   based on `functions()` and objects
    -   functions do things with data
    -   objects store data and output from functions
-   let's first skim basic definitions, then go to practical examples
- decimal symbol is always *`.`*! Commas are used to separate things.

### Functions

-   a function always has `()` tied to it
-   various settings within a function are divided by `,`
-   we can pipe/forward an object or function output to another function
    -   there are two pipes (we'll only use the first one)
    -   `%>%` - the `magrittr` pipe (*shift+ctrl+m*)
    -   `|>` - the `base` pipe

### Function syntax

- comma separates input within the parantheses
  - `hist(data, xlab = "Distribution of variable")`
- use the Help tab in lower right quadrant (or `?function` in console)


### Objects {.smaller}

-   objects can have many different classes/formats
-   we will mostly work with dataframes
    -   similar to what you see in a spreadsheet file (Excel)
    -   they consist of vectors (rows and columns)
    -   a vector is a string of values
-   each object or column in a dataframe can have a different class
    -   we will primarily work with
    -   character (chr)
    -   factor (fct)
    -   numerical (num, int, or dbl)
    
### Simple object examples

Single values
``` r
number <- 1
number <- "1"
```

Multiple values (a vector)
``` r
number <- c(1,2)
number <- c("one","two")
```

Dataframes
``` r
df <- read_excel("path/to/excelfile.xls", sheet = 1)
```
- A dataframe is a collection of rows (vectors) and columns (also vectors).

### Keyboard shortcuts {.smaller}

-   **TAB-completion** TAB-tangenten har många funktioner, dels kan den fylla i objekt- eller funktionsnamn när du skriver kod, men även i sökvägar när du ska läsa en fil.
-   **CTRL+enter** Kör kodraden du har markören på (och hoppar ner till nästa). Om du har ett block med flera rader av tidy-kod som hålls samman med pipe-symbolen `%\>%` som radbrytning, eller ggplot-kod (som hålls samman med `+`) så spelar det ingen roll var bland raderna markören är, hela blocket körs ändå
-   **CTRL+SHIFT+enter** Kör en hel code chunk i Quarto. Spelar ingen roll var i chunken du har markören.
-   **CTRL+SHIFT+m** Skapar en pipe-symbol
-   **CTRL+ALT(option)+i** Skapar en ny code chunk i Quarto
-   **CTRL/CMD+SHIFT+c** Kommentera bort/in alla rader som är markerade

